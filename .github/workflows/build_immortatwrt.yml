name: OpenWrt Builder

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  CONFIG_FILE: .config
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: 释放磁盘空间
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 获取源码
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 更新软件源
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 添加模组插件
      run: |
        cd openwrt
        echo 'src-git modem https://github.com/FUjr/modem_feeds.git;main' >> feeds.conf.default
        ./scripts/feeds update modem
        ./scripts/feeds install -a -p modem

    - name: 加载模组驱动
      run: |
        cd openwrt
        echo 'src-git lede https://github.com/coolsnowwolf/lede;master' >> feeds.conf.default
        ./scripts/feeds update lede
        ./scripts/feeds install quectel_MHI

    - name: 导入配置文件
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: 下载依赖
      run: |
        cd openwrt
        make oldconfig
        make download -j8
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      run: |
        cd openwrt
        make -j$(($(nproc) + 1)) || make -j1 V=s

    - name: 安装 GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y curl ca-certificates
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt-get update
        sudo apt-get install gh -y

    - name: 发布固件
      uses: softprops/action-gh-release@v1
      with:
        tag_name: nightly-${{ github.run_id }}
        files: openwrt/bin/targets/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 清理旧版本
      run: |
        echo "正在清理旧版本..."
        all_tags=$(gh release list --limit 100 | grep '^nightly-' | awk '{print $1}')
        count=$(echo "$all_tags" | wc -l)

        if [ "$count" -gt 2 ]; then
          echo "找到 $count 个历史版本，保留最新 2 个"
          to_delete=$(echo "$all_tags" | tail -n +3)
          echo "$to_delete" | while read -r tag; do
            gh release delete "$tag" --yes || true
          done
        else
          echo "无需清理，当前版本数：$count"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
